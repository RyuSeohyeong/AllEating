<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.spring.alleating.member.dao.MemberDAO">

	<resultMap id="memResult" type="memberVO">
		<result property="id" column="id" />
		<result property="pwd" column="pwd" />
		<result property="join_type" column="join_type" />
		<result property="name" column="name" />
		<result property="email1" column="email1" />
		<result property="email2" column="email2" />
		<result property="hp1" column="hp1" />
		<result property="hp2" column="hp2" />
		<result property="hp3" column="hp3" />
		<result property="zipcode" column="zipcode" />
		<result property="address" column="address" />
		<result property="address2" column="address2" />
		<result property="address_detail" column="address_detail" />
		<result property="gender" column="gender"/>
		<result property="birth_year" column="birth_year"/>
		<result property="birth_month" column="birth_month"/>
		<result property="birth_day" column="birth_day"/>
		<result property="sms_yn" column="sms_yn"/>
		<result property="email_yn" column="email_yn"/>
		<result property="member_grade" column="member_grade"/>
		<result property="del_yn" column="del_yn"/>
		<result property="owner_name" column="owner_name"/>
		<result property="owner_num" column="owner_num"/>
		<result property="owner_tel1" column="owner_tel1"/>
		<result property="owner_tel2" column="owner_tel2"/>
		<result property="owner_tel3" column="owner_tel3"/>
		<result property="joinDate" column="joinDate"/>
		<result property="personalInformation" column="personalInformation"/>
		<result property="snsId" column="snsId"/>
	</resultMap>
	<!-- select -->
	<!-- 일반로그인 -->
	<select id = "selectByIdAndPwd" parameterType="java.util.Map" resultMap="memResult">
		select * from member where id = #{id} and pwd = #{pwd}
	</select>
	<!-- 카카오 로그인 -->
	<select id="selectKaKaoLogin" parameterType="java.util.Map" resultMap="memResult">
		select * from member where id = #{id} and email = #{email}
	</select>
	<select id="selectById" parameterType="String" resultType="int">
		select count(*) from member where id = #{id}
	</select>
	
	<select id="selectMemberById" resultType="memberVO" parameterType="String">
 	 	select * from member
 	 	where
  		id=#{id}
	</select>
	
	<!-- 카카오 로그인 -->
	<select id="selectCheckSnsId" resultType="int" parameterType="java.util.Map">
		select count(*) from member where id = #{id} and email = #{email}
	</select>
	<!-- 카카오 로그인 끝 -->
	<!-- insert -->
	<insert id="insertMember" parameterType="java.util.Map">
 			insert into member(
 			id, 
 			pwd, 
 			join_type,
 			name,
 			email,
 			hp1,
 			hp2,
 			hp3,
 			zipcode,
 			address,
 			address2,
 			address_detail,
 			gender,
 			birth_year,
 			birth_month,
 			birth_day,
 			sms_yn,
 			email_yn,
 			member_grade,
 			owner_name,
 			owner_num,
 			owner_tel1,
 			owner_tel2,
 			owner_tel3,
 			personalInformation
 			) values(
 				#{id}, 
 				#{pwd}, 
 				#{join_type}, 
 				#{name}, 
 				#{email}, 
 				#{hp1}, 
 				#{hp2}, 
 				#{hp3}, 
 				#{zipcode}, 
 				#{address}, 
 				#{address2}, 
 				#{address_detail}, 
 				#{gender}, 
 				#{birth_year},
 				#{birth_month},
 				#{birth_day},
 				#{sms_yn},
 				#{email_yn},
 				<choose>
 					<when test="join_type == 'user'">'base',</when>
 					<otherwise>null,</otherwise>
 				</choose>
 				#{owner_name},
 				#{owner_num},
 				#{owner_tel1},
 				#{owner_tel2},
 				#{owner_tel3},
 				#{personalInformation}
 			)
	</insert>
	<insert id="joinMemberDeliveryaddress" parameterType="java.util.Map">
		insert into deliveryaddress(id, deliveryName, receiver_name, receiver_hp1, receiver_hp2,receiver_hp3, zipcode, address, address2, address_detail, default_address)
		values(#{id}, '기본배송지',#{receiver_name}, #{receiver_hp1}, #{receiver_hp2}, #{receiver_hp3}, #{zipcode}, #{address}, #{address2}, #{address_detail}, 'y')
	</insert>
	<update id="updateMember" parameterType="memberVO">
  		update member
  		set pwd=#{pwd},
  		    name=#{name}, 
  		    email=#{email},
  		    hp1=#{hp1},
  		    hp2=#{hp2},
  		    hp3=#{hp3},
  		    zipcode=#{zipcode},
  		    address=#{address},
  		    address2=#{address2},
  		    address_detail=#{address_detail},
  		    gender=#{gender},
  		    birth_year=#{birth_year},
  		    birth_month=#{birth_month},
  		    birth_day=#{birth_day},
  		    sms_yn=#{sms_yn},
  		    email_yn=#{email_yn}	    
  			where
  			id=#{id}
    </update>
    
    <select id="checkPw" resultType="int">
   select count(*) from member where id = #{id} AND pwd = #{pwd}
    </select>
    
    
</mapper>