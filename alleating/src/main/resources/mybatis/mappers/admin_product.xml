<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.spring.alleating.admin.product.dao.AdminProductDAO">
 	<resultMap id="productResult" type="productVO">
		<result property="productId" column="productId" />
		<result property="deliveryType" column="deliveryType" />
		<result property="deliveryPrice" column="deliveryPrice" />
		<result property="cateCode" column="cateCode" />
		<result property="productName" column="productName" />
		<result property="productPrice" column="productPrice" />
		<result property="productDiscount" column="productDiscount" />
		<result property="productSalesPrice" column="productSalesPrice" />
		<result property="productUnit" column="productUnit" />
		<result property="productPackType" column="productPackType" />
		<result property="productWeight" column="productWeight" />
		<result property="productOrigin" column="productOrigin"/>
		<result property="productTotal" column="productTotal"/>
		<result property="productExpireDate" column="productExpireDate"/>
		<result property="productStatus" column="productStatus"/>
		<result property="productBrand" column="productBrand"/>
		<result property="productContentTitle" column="productContentTitle"/>
		<result property="productContent" column="productContent"/>
		<result property="creDate" column="creDate"/>
		<result property="reg_id" column="reg_id"/>
		<result property="reg_com_name" column="reg_com_name"/>
		<result property="join_type" column="join_type" />
	</resultMap>
	
	<resultMap id="productImgResult" type="productImgVO">
		<result property="imgId" column="imgId" />
		<result property="productId" column="productId" />
		<result property="reg_id" column="reg_id" />
		<result property="fileName" column="fileName" />
		<result property="fileType" column="fileType" />
		<result property="creDate" column="creDate" />
	</resultMap>
	
	<select id="selectProduct" resultMap="productResult" parameterType="java.util.Map">
		<![CDATA[
		select result.* from
		(select (@rowNum := @rowNum+1) as recNum, p.* from
			(select *,(@rowNum:=0) from product where join_type = #{join_type} 
			order by creDate desc) as p) as result
			where recNum BETWEEN (#{section}-1)*100 + (#{pageNum}-1)*15 + 1 AND (#{section}-1)*100 + (#{pageNum})*15;
		]]>
	</select>
	<select id="selectTotalProduct" resultType="int" parameterType="String">
		<![CDATA[
		select count(*) from product where join_type = #{join_type}
		]]>
	</select>
	<select id="selectProductDetail" resultMap="productResult" parameterType="String">
		<![CDATA[
		select * from product where productId = #{productId}
		]]>
	</select>
	<select id="selectProductDetailImage" resultMap="productImgResult" parameterType="String">
		<![CDATA[
		select * from product_img where productId = #{productId}
		]]>
	</select>
	<select id="selectMemberByRegId" resultType="memberVO" parameterType="String">
		<![CDATA[
			select id, name, owner_name from member where id = #{reg_id}
		]]>
	</select>
	<!-- 상품 정보 -->
	<insert id="insertNewProduct" parameterType="java.util.Map">
		<selectKey resultType="String" keyProperty="productId"
			order="BEFORE">
			select ifnull(max(productId),0)+1 from product
		</selectKey>
		<![CDATA[
		insert into product(
							productId,
							deliveryType,
							deliveryPrice,
							cateCode,
							productName,
							productPrice,
							productDiscount,
							productSalesPrice,
							productUnit,
							productPackType,
							productWeight,
							productOrigin,
							productTotal,
							productExpireDate,
							productStatus,
							productBrand,
							productContentTitle,
							productContent,
							reg_id,
							reg_com_name,
							join_type)
							values(
							#{productId},
							#{deliveryType},
							#{deliveryPrice},
							#{cateCode},
							#{productName},
							#{productPrice},
							#{productDiscount},
							#{productSalesPrice},
							#{productUnit},
							#{productPackType},
							#{productWeight},
							#{productOrigin},
							#{productTotal},
							#{productExpireDate},
							#{productStatus},
							#{productBrand},
							#{productContentTitle},
							#{productContent},
							#{reg_id},
							'AllEating',
							#{join_type}
							)
			]]>
	</insert>
	<!-- 상품 이미지 -->
	<insert id="insertProductImageFile" parameterType="productImgVO">
		
		<selectKey resultType="int" keyProperty="imgId"
			order="BEFORE">
			select ifnull(max(imgId),0)+1 from product_img
		</selectKey>
	 
		   insert into product_img (imgId,
		                                     productId,
									         fileName,
											 fileType,
											 reg_id)
											 values
											 (#{imgId},
											 #{productId},
											 #{fileName},
											 #{fileType},
											 #{reg_id} )
	
		
	</insert>
	<!-- 판매상태 변경 -->
	<update id="updateProductStatus" parameterType="productVO">
	 	update product set productStatus = #{productStatus} where productId = #{productId}
	</update>
	<!-- 상품 이미지 수정 -->
	<update id="updateProductImg" parameterType="productImgVO">
		update product_img set  fileName=#{fileName}
		where
		productId=#{productId} and imgId=#{imgId}
	</update>
	<!-- 상품 정보 수정 -->
	<update id="updateProductInfo" parameterType="productVO">
		update product set cateCode = #{cateCode}, productName=#{productName}, productPrice=#{productPrice}, productDiscount=#{productDiscount},
		<if test="productDiscount>0">
		productSalesPrice = #{productSalesPrice},
		</if>
		productUnit = #{productUnit}, productPackType = #{productPackType}, productWeight=#{productWeight}, productOrigin=#{productOrigin}, productTotal=#{productTotal},
		productExpireDate= #{productExpireDate}, productContentTitle=#{productContentTitle}, productContent=#{productContent}, productBrand=#{productBrand}
		where productId = #{productId}
	</update>
	
	<delete id="delProduct" parameterType="productVO">
		delete from product where productId = #{productId}
	</delete>
	<delete id="deleteProductImg" parameterType="String">
		delete from product_img where imgId = #{imgId}
	</delete>
 </mapper>